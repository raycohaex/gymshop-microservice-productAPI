ù
tD:\School\semester3\eigenproject\docker-dotnet-sql-test1\GymShopAPI\GymShopAPI.DAL\Classes\ProductQueryParameters.cs
	namespace 	

GymShopAPI
 
. 
DAL 
. 
Classes  
{ 
public 

class "
ProductQueryParameters '
:( )
QueryParameters* 9
{		 
public

 
string

 
Sku

 
{

 
get

 
;

  
set

! $
;

$ %
}

& '
public 
decimal 
? 
MinPrice  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
decimal 
? 
MaxPrice  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
} 
} Ê
mD:\School\semester3\eigenproject\docker-dotnet-sql-test1\GymShopAPI\GymShopAPI.DAL\Classes\QueryParameters.cs
	namespace 	

GymShopAPI
 
. 
DAL 
. 
Classes  
{ 
public 

class 
QueryParameters  
{		 
const

 
int

 
_maxSize

 
=

 
$num

  
;

  !
private 
int 
_size 
= 
$num 
; 
public 
int 
Page 
{ 
get 
; 
set "
;" #
}$ %
public 
int 
Size 
{ 	
get 
{ 
return 
_size 
; 
} 
set 
{ 
_size 
= 
Math 
. 
Min  
(  !
_maxSize! )
,) *
value+ 0
)0 1
;1 2
} 
} 	
} 
} §
sD:\School\semester3\eigenproject\docker-dotnet-sql-test1\GymShopAPI\GymShopAPI.DAL\Controllers\IProductsDbAccess.cs
	namespace		 	

GymShopAPI		
 
.		 
DAL		 
.		 

Interfaces		 #
{

 
public 

	interface 
IProductsDbAccess &
{ 
public 
Task 
< 
Product 
[ 
] 
> 
GetAllProducts -
(- ."
ProductQueryParameters. D
queryParametersE T
)T U
;U V
public 
Task 
< 
Product 
> 

GetProduct '
(' (
int( +
id, .
). /
;/ 0
public 
Task 
< 
ActionResult  
<  !
Product! (
>( )
>) *
PostProduct+ 6
(6 7
Product7 >
product? F
)F G
;G H
public 
Task 
< 
IActionResult !
>! "

PutProduct# -
(- .
int. 1
id2 4
,4 5
Product6 =
product> E
)E F
;F G
public 
Task 
< 
ActionResult  
<  !
Product! (
>( )
>) *
DeleteProduct+ 8
(8 9
int9 <
id= ?
)? @
;@ A
} 
} À9
rD:\School\semester3\eigenproject\docker-dotnet-sql-test1\GymShopAPI\GymShopAPI.DAL\Controllers\ProductsDbAccess.cs
	namespace 	

GymShopAPI
 
. 
DAL 
. 
Controllers $
{ 
public 

class 
ProductsDbAccess !
:" #
IProductsDbAccess$ 5
{ 
private 
readonly 
ShopContext $
_context% -
;- .
public 
ProductsDbAccess 
(  
ShopContext  +
context, 3
)3 4
{ 	
_context 
= 
context 
; 
_context 
. 
Database 
. 
EnsureCreated +
(+ ,
), -
;- .
} 	
public 
async 
Task 
< 
Product !
[! "
]" #
># $
GetAllProducts% 3
(3 4"
ProductQueryParameters4 J
queryParametersK Z
)Z [
{ 	

IQueryable 
< 
Product 
> 
products  (
=) *
_context+ 3
.3 4
Products4 <
;< =
if 
( 
queryParameters 
.  
MinPrice  (
!=) +
null, 0
&&1 3
queryParameters4 C
.C D
MaxPriceD L
!=M O
nullP T
)T U
{   
products!! 
=!! 
products!! #
.!!# $
Where!!$ )
(!!) *
p"" 
=>"" 
p"" 
."" 
Price""  
>=""! #
queryParameters""$ 3
.""3 4
MinPrice""4 <
.""< =
Value""= B
&&""C E
p## 
.## 
Price##  
<=##! #
queryParameters##$ 3
.##3 4
MaxPrice##4 <
.##< =
Value##= B
)$$ 
;$$ 
}%% 
if'' 
('' 
!'' 
string'' 
.'' 
IsNullOrEmpty'' %
(''% &
queryParameters''& 5
.''5 6
Sku''6 9
)''9 :
)'': ;
{(( 
products)) 
=)) 
products)) #
.))# $
Where))$ )
())) *
p))* +
=>)), .
p))/ 0
.))0 1
Sku))1 4
==))5 7
queryParameters))8 G
.))G H
Sku))H K
)))K L
;))L M
}** 
if,, 
(,, 
!,, 
string,, 
.,, 
IsNullOrEmpty,, %
(,,% &
queryParameters,,& 5
.,,5 6
Name,,6 :
),,: ;
),,; <
{-- 
products.. 
=.. 
products.. #
...# $
Where..$ )
(..) *
p// 
=>// 
p// 
.// 
Name// 
.//  
ToLower//  '
(//' (
)//( )
.//) *
Contains//* 2
(//2 3
queryParameters//3 B
.//B C
Name//C G
.//G H
ToLower//H O
(//O P
)//P Q
)//Q R
)//R S
;//S T
}00 
return55 
await55 
products55 !
.55! "
ToArrayAsync55" .
(55. /
)55/ 0
;550 1
}66 	
public88 
async88 
Task88 
<88 
Product88 !
>88! "

GetProduct88# -
(88- .
int88. 1
id882 4
)884 5
{99 	
var:: 
product:: 
=:: 
await:: 
_context::  (
.::( )
Products::) 1
.::1 2
	FindAsync::2 ;
(::; <
id::< >
)::> ?
;::? @
if<< 
(<< 
product<< 
==<< 
null<< 
)<<  
{== 
return>> 
null>> 
;>> 
}?? 
returnAA 
productAA 
;AA 
}BB 	
publicDD 
asyncDD 
TaskDD 
<DD 
ActionResultDD &
<DD& '
ProductDD' .
>DD. /
>DD/ 0
PostProductDD1 <
(DD< =
ProductDD= D
productDDE L
)DDL M
{EE 	
_contextFF 
.FF 
ProductsFF 
.FF 
AddFF !
(FF! "
productFF" )
)FF) *
;FF* +
awaitGG 
_contextGG 
.GG 
SaveChangesAsyncGG +
(GG+ ,
)GG, -
;GG- .
returnII 
productII 
;II 
}JJ 	
publicLL 
asyncLL 
TaskLL 
<LL 
IActionResultLL '
>LL' (

PutProductLL) 3
(LL3 4
intLL4 7
idLL8 :
,LL: ;
ProductLL< C
productLLD K
)LLK L
{MM 	
ifNN 
(NN 
idNN 
!=NN 
productNN 
.NN 
IdNN  
)NN  !
{OO 
returnQQ 
nullQQ 
;QQ 
}RR 
_contextTT 
.TT 
EntryTT 
(TT 
productTT "
)TT" #
.TT# $
StateTT$ )
=TT* +
EntityStateTT, 7
.TT7 8
ModifiedTT8 @
;TT@ A
tryVV 
{WW 
awaitXX 
_contextXX 
.XX 
SaveChangesAsyncXX /
(XX/ 0
)XX0 1
;XX1 2
}YY 
catchZZ 
(ZZ (
DbUpdateConcurrencyExceptionZZ /
)ZZ/ 0
{[[ 
if\\ 
(\\ 
_context\\ 
.\\ 
Products\\ $
.\\$ %
Find\\% )
(\\) *
id\\* ,
)\\, -
==\\. 0
null\\1 5
)\\5 6
{]] 
return^^ 
null^^ 
;^^  
}__ 
throw`` 
;`` 
}aa 
returnbb 
nullbb 
;bb 
}cc 	
publicee 
asyncee 
Taskee 
<ee 
ActionResultee &
<ee& '
Productee' .
>ee. /
>ee/ 0
DeleteProductee1 >
(ee> ?
intee? B
ideeC E
)eeE F
{ff 	
vargg 
productgg 
=gg 
awaitgg 
_contextgg  (
.gg( )
Productsgg) 1
.gg1 2
	FindAsyncgg2 ;
(gg; <
idgg< >
)gg> ?
;gg? @
ifhh 
(hh 
producthh 
==hh 
nullhh 
)hh  
{ii 
returnjj 
nulljj 
;jj 
}kk 
_contextmm 
.mm 
Productsmm 
.mm 
Removemm $
(mm$ %
productmm% ,
)mm, -
;mm- .
awaitnn 
_contextnn 
.nn 
SaveChangesAsyncnn +
(nn+ ,
)nn, -
;nn- .
returnpp 
productpp 
;pp 
}qq 	
}rr 
}ss ÷π
vD:\School\semester3\eigenproject\docker-dotnet-sql-test1\GymShopAPI\GymShopAPI.DAL\Migrations\20201014102101_DbInit.cs
	namespace 	

GymShopAPI
 
. 
DAL 
. 

Migrations #
{ 
public 

partial 
class 
DbInit 
:  !
	Migration" +
{ 
	protected		 
override		 
void		 
Up		  "
(		" #
MigrationBuilder		# 3
migrationBuilder		4 D
)		D E
{

 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str "
," #
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
int& )
>) *
(* +
nullable+ 3
:3 4
false5 :
): ;
. 

Annotation #
(# $
$str$ C
,C D(
MySqlValueGenerationStrategyE a
.a b
IdentityColumnb p
)p q
,q r
Name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
nullable0 8
:8 9
true: >
)> ?
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 4
,4 5
x6 7
=>8 :
x; <
.< =
Id= ?
)? @
;@ A
} 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
, 
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
int& )
>) *
(* +
nullable+ 3
:3 4
false5 :
): ;
. 

Annotation #
(# $
$str$ C
,C D(
MySqlValueGenerationStrategyE a
.a b
IdentityColumnb p
)p q
,q r
Email 
= 
table !
.! "
Column" (
<( )
string) /
>/ 0
(0 1
nullable1 9
:9 :
true; ?
)? @
} 
, 
constraints   
:   
table   "
=>  # %
{!! 
table"" 
."" 

PrimaryKey"" $
(""$ %
$str""% /
,""/ 0
x""1 2
=>""3 5
x""6 7
.""7 8
Id""8 :
)"": ;
;""; <
}## 
)## 
;## 
migrationBuilder%% 
.%% 
CreateTable%% (
(%%( )
name&& 
:&& 
$str&& 
,&& 
columns'' 
:'' 
table'' 
=>'' !
new''" %
{(( 
Id)) 
=)) 
table)) 
.)) 
Column)) %
<))% &
int))& )
>))) *
())* +
nullable))+ 3
:))3 4
false))5 :
))): ;
.** 

Annotation** #
(**# $
$str**$ C
,**C D(
MySqlValueGenerationStrategy**E a
.**a b
IdentityColumn**b p
)**p q
,**q r
	OrderDate++ 
=++ 
table++  %
.++% &
Column++& ,
<++, -
DateTime++- 5
>++5 6
(++6 7
nullable++7 ?
:++? @
false++A F
)++F G
,++G H
UserId,, 
=,, 
table,, "
.,," #
Column,,# )
<,,) *
int,,* -
>,,- .
(,,. /
nullable,,/ 7
:,,7 8
false,,9 >
),,> ?
}-- 
,-- 
constraints.. 
:.. 
table.. "
=>..# %
{// 
table00 
.00 

PrimaryKey00 $
(00$ %
$str00% 0
,000 1
x002 3
=>004 6
x007 8
.008 9
Id009 ;
)00; <
;00< =
table11 
.11 

ForeignKey11 $
(11$ %
name22 
:22 
$str22 6
,226 7
column33 
:33 
x33  !
=>33" $
x33% &
.33& '
UserId33' -
,33- .
principalTable44 &
:44& '
$str44( /
,44/ 0
principalColumn55 '
:55' (
$str55) -
,55- .
onDelete66  
:66  !
ReferentialAction66" 3
.663 4
Cascade664 ;
)66; <
;66< =
}77 
)77 
;77 
migrationBuilder99 
.99 
CreateTable99 (
(99( )
name:: 
::: 
$str::  
,::  !
columns;; 
:;; 
table;; 
=>;; !
new;;" %
{<< 
Id== 
=== 
table== 
.== 
Column== %
<==% &
int==& )
>==) *
(==* +
nullable==+ 3
:==3 4
false==5 :
)==: ;
.>> 

Annotation>> #
(>># $
$str>>$ C
,>>C D(
MySqlValueGenerationStrategy>>E a
.>>a b
IdentityColumn>>b p
)>>p q
,>>q r
Sku?? 
=?? 
table?? 
.??  
Column??  &
<??& '
string??' -
>??- .
(??. /
nullable??/ 7
:??7 8
true??9 =
)??= >
,??> ?
Name@@ 
=@@ 
table@@  
.@@  !
Column@@! '
<@@' (
string@@( .
>@@. /
(@@/ 0
nullable@@0 8
:@@8 9
true@@: >
)@@> ?
,@@? @
DescriptionAA 
=AA  !
tableAA" '
.AA' (
ColumnAA( .
<AA. /
stringAA/ 5
>AA5 6
(AA6 7
nullableAA7 ?
:AA? @
trueAAA E
)AAE F
,AAF G
PriceBB 
=BB 
tableBB !
.BB! "
ColumnBB" (
<BB( )
decimalBB) 0
>BB0 1
(BB1 2
nullableBB2 :
:BB: ;
falseBB< A
)BBA B
,BBB C
IsAvailableCC 
=CC  !
tableCC" '
.CC' (
ColumnCC( .
<CC. /
boolCC/ 3
>CC3 4
(CC4 5
nullableCC5 =
:CC= >
falseCC? D
)CCD E
,CCE F

CategoryIdDD 
=DD  
tableDD! &
.DD& '
ColumnDD' -
<DD- .
intDD. 1
>DD1 2
(DD2 3
nullableDD3 ;
:DD; <
falseDD= B
)DDB C
,DDC D
OrderIdEE 
=EE 
tableEE #
.EE# $
ColumnEE$ *
<EE* +
intEE+ .
>EE. /
(EE/ 0
nullableEE0 8
:EE8 9
trueEE: >
)EE> ?
}FF 
,FF 
constraintsGG 
:GG 
tableGG "
=>GG# %
{HH 
tableII 
.II 

PrimaryKeyII $
(II$ %
$strII% 2
,II2 3
xII4 5
=>II6 8
xII9 :
.II: ;
IdII; =
)II= >
;II> ?
tableJJ 
.JJ 

ForeignKeyJJ $
(JJ$ %
nameKK 
:KK 
$strKK A
,KKA B
columnLL 
:LL 
xLL  !
=>LL" $
xLL% &
.LL& '

CategoryIdLL' 1
,LL1 2
principalTableMM &
:MM& '
$strMM( 4
,MM4 5
principalColumnNN '
:NN' (
$strNN) -
,NN- .
onDeleteOO  
:OO  !
ReferentialActionOO" 3
.OO3 4
CascadeOO4 ;
)OO; <
;OO< =
tablePP 
.PP 

ForeignKeyPP $
(PP$ %
nameQQ 
:QQ 
$strQQ :
,QQ: ;
columnRR 
:RR 
xRR  !
=>RR" $
xRR% &
.RR& '
OrderIdRR' .
,RR. /
principalTableSS &
:SS& '
$strSS( 0
,SS0 1
principalColumnTT '
:TT' (
$strTT) -
,TT- .
onDeleteUU  
:UU  !
ReferentialActionUU" 3
.UU3 4
RestrictUU4 <
)UU< =
;UU= >
}VV 
)VV 
;VV 
migrationBuilderXX 
.XX 

InsertDataXX '
(XX' (
tableYY 
:YY 
$strYY #
,YY# $
columnsZZ 
:ZZ 
newZZ 
[ZZ 
]ZZ 
{ZZ  
$strZZ! %
,ZZ% &
$strZZ' -
}ZZ. /
,ZZ/ 0
values[[ 
:[[ 
new[[ 
object[[ "
[[[" #
,[[# $
][[$ %
{\\ 
{]] 
$num]] 
,]] 
$str]] ,
}]]- .
,]]. /
{^^ 
$num^^ 
,^^ 
$str^^ .
}^^/ 0
,^^0 1
{__ 
$num__ 
,__ 
$str__ (
}__) *
,__* +
{`` 
$num`` 
,`` 
$str`` '
}``( )
,``) *
{aa 
$numaa 
,aa 
$straa &
}aa' (
}bb 
)bb 
;bb 
migrationBuilderdd 
.dd 

InsertDatadd '
(dd' (
tableee 
:ee 
$stree 
,ee 
columnsff 
:ff 
newff 
[ff 
]ff 
{ff  
$strff! %
,ff% &
$strff' .
}ff/ 0
,ff0 1
valuesgg 
:gg 
newgg 
objectgg "
[gg" #
,gg# $
]gg$ %
{hh 
{ii 
$numii 
,ii 
$strii +
}ii, -
,ii- .
{jj 
$numjj 
,jj 
$strjj .
}jj/ 0
}kk 
)kk 
;kk 
migrationBuildermm 
.mm 

InsertDatamm '
(mm' (
tablenn 
:nn 
$strnn !
,nn! "
columnsoo 
:oo 
newoo 
[oo 
]oo 
{oo  
$stroo! %
,oo% &
$stroo' 3
,oo3 4
$stroo5 B
,ooB C
$strooD Q
,ooQ R
$strooS Y
,ooY Z
$stroo[ d
,ood e
$stroof m
,oom n
$strooo t
}oou v
,oov w
valuespp 
:pp 
newpp 
objectpp "
[pp" #
,pp# $
]pp$ %
{qq 
{rr 
$numrr 
,rr 
$numrr 
,rr 
nullrr  
,rr  !
truerr" &
,rr& '
$strrr( =
,rr= >
nullrr? C
,rrC D
$numrrE H
,rrH I
$strrrJ R
}rrS T
,rrT U
{ss 
$numss 
,ss 
$numss 
,ss 
nullss !
,ss! "
truess# '
,ss' (
$strss) J
,ssJ K
nullssL P
,ssP Q
$numssR X
,ssX Y
$strssZ _
}ss` a
,ssa b
{tt 
$numtt 
,tt 
$numtt 
,tt 
nulltt !
,tt! "
truett# '
,tt' (
$strtt) L
,ttL M
nullttN R
,ttR S
$numttT Z
,ttZ [
$strtt\ a
}ttb c
,ttc d
{uu 
$numuu 
,uu 
$numuu 
,uu 
nulluu !
,uu! "
trueuu# '
,uu' (
$struu) F
,uuF G
nulluuH L
,uuL M
$numuuN S
,uuS T
$struuU Z
}uu[ \
,uu\ ]
{vv 
$numvv 
,vv 
$numvv 
,vv 
nullvv !
,vv! "
truevv# '
,vv' (
$strvv) I
,vvI J
nullvvK O
,vvO P
$numvvQ W
,vvW X
$strvvY `
}vva b
,vvb c
{ww 
$numww 
,ww 
$numww 
,ww 
nullww !
,ww! "
trueww# '
,ww' (
$strww) C
,wwC D
nullwwE I
,wwI J
$numwwK Q
,wwQ R
$strwwS Y
}wwZ [
,ww[ \
{xx 
$numxx 
,xx 
$numxx 
,xx 
nullxx !
,xx! "
truexx# '
,xx' (
$strxx) L
,xxL M
nullxxN R
,xxR S
$numxxT Z
,xxZ [
$strxx\ d
}xxe f
,xxf g
{yy 
$numyy 
,yy 
$numyy 
,yy 
nullyy !
,yy! "
trueyy# '
,yy' (
$stryy) G
,yyG H
nullyyI M
,yyM N
$numyyO T
,yyT U
$stryyV ]
}yy^ _
,yy_ `
{zz 
$numzz 
,zz 
$numzz 
,zz 
nullzz !
,zz! "
truezz# '
,zz' (
$strzz) G
,zzG H
nullzzI M
,zzM N
$numzzO U
,zzU V
$strzzW ]
}zz^ _
,zz_ `
{{{ 
$num{{ 
,{{ 
$num{{ 
,{{ 
null{{ !
,{{! "
true{{# '
,{{' (
$str{{) C
,{{C D
null{{E I
,{{I J
$num{{K O
,{{O P
$str{{Q V
}{{W X
,{{X Y
{|| 
$num|| 
,|| 
$num|| 
,|| 
null|| !
,||! "
true||# '
,||' (
$str||) B
,||B C
null||D H
,||H I
$num||J N
,||N O
$str||P U
}||V W
,||W X
{}} 
$num}} 
,}} 
$num}} 
,}} 
null}} !
,}}! "
true}}# '
,}}' (
$str}}) >
,}}> ?
null}}@ D
,}}D E
$num}}F J
,}}J K
$str}}L Q
}}}R S
,}}S T
{~~ 
$num~~ 
,~~ 
$num~~ 
,~~ 
null~~ !
,~~! "
true~~# '
,~~' (
$str~~) ?
,~~? @
null~~A E
,~~E F
$num~~G K
,~~K L
$str~~M R
}~~S T
,~~T U
{ 
$num 
, 
$num 
, 
null !
,! "
true# '
,' (
$str) C
,C D
nullE I
,I J
$numK O
,O P
$strQ W
}X Y
,Y Z
{
ÄÄ 
$num
ÄÄ 
,
ÄÄ 
$num
ÄÄ 
,
ÄÄ 
null
ÄÄ !
,
ÄÄ! "
true
ÄÄ# '
,
ÄÄ' (
$str
ÄÄ) B
,
ÄÄB C
null
ÄÄD H
,
ÄÄH I
$num
ÄÄJ N
,
ÄÄN O
$str
ÄÄP U
}
ÄÄV W
,
ÄÄW X
{
ÅÅ 
$num
ÅÅ 
,
ÅÅ 
$num
ÅÅ 
,
ÅÅ 
null
ÅÅ !
,
ÅÅ! "
true
ÅÅ# '
,
ÅÅ' (
$str
ÅÅ) J
,
ÅÅJ K
null
ÅÅL P
,
ÅÅP Q
$num
ÅÅR W
,
ÅÅW X
$str
ÅÅY ^
}
ÅÅ_ `
,
ÅÅ` a
{
ÇÇ 
$num
ÇÇ 
,
ÇÇ 
$num
ÇÇ 
,
ÇÇ 
null
ÇÇ !
,
ÇÇ! "
true
ÇÇ# '
,
ÇÇ' (
$str
ÇÇ) 9
,
ÇÇ9 :
null
ÇÇ; ?
,
ÇÇ? @
$num
ÇÇA D
,
ÇÇD E
$str
ÇÇF N
}
ÇÇO P
,
ÇÇP Q
{
ÉÉ 
$num
ÉÉ 
,
ÉÉ 
$num
ÉÉ 
,
ÉÉ 
null
ÉÉ !
,
ÉÉ! "
true
ÉÉ# '
,
ÉÉ' (
$str
ÉÉ) >
,
ÉÉ> ?
null
ÉÉ@ D
,
ÉÉD E
$num
ÉÉF I
,
ÉÉI J
$str
ÉÉK S
}
ÉÉT U
,
ÉÉU V
{
ÑÑ 
$num
ÑÑ 
,
ÑÑ 
$num
ÑÑ 
,
ÑÑ 
null
ÑÑ !
,
ÑÑ! "
true
ÑÑ# '
,
ÑÑ' (
$str
ÑÑ) ?
,
ÑÑ? @
null
ÑÑA E
,
ÑÑE F
$num
ÑÑG J
,
ÑÑJ K
$str
ÑÑL T
}
ÑÑU V
,
ÑÑV W
{
ÖÖ 
$num
ÖÖ 
,
ÖÖ 
$num
ÖÖ 
,
ÖÖ 
null
ÖÖ !
,
ÖÖ! "
true
ÖÖ# '
,
ÖÖ' (
$str
ÖÖ) 9
,
ÖÖ9 :
null
ÖÖ; ?
,
ÖÖ? @
$num
ÖÖA E
,
ÖÖE F
$str
ÖÖG N
}
ÖÖO P
,
ÖÖP Q
{
ÜÜ 
$num
ÜÜ 
,
ÜÜ 
$num
ÜÜ 
,
ÜÜ 
null
ÜÜ !
,
ÜÜ! "
true
ÜÜ# '
,
ÜÜ' (
$str
ÜÜ) >
,
ÜÜ> ?
null
ÜÜ@ D
,
ÜÜD E
$num
ÜÜF I
,
ÜÜI J
$str
ÜÜK S
}
ÜÜT U
,
ÜÜU V
{
áá 
$num
áá 
,
áá 
$num
áá 
,
áá 
null
áá !
,
áá! "
false
áá# (
,
áá( )
$str
áá* D
,
ááD E
null
ááF J
,
ááJ K
$num
ááL N
,
ááN O
$str
ááP X
}
ááY Z
,
ááZ [
{
àà 
$num
àà 
,
àà 
$num
àà 
,
àà 
null
àà !
,
àà! "
true
àà# '
,
àà' (
$str
àà) B
,
ààB C
null
ààD H
,
ààH I
$num
ààJ M
,
ààM N
$str
ààO X
}
ààY Z
,
ààZ [
{
ââ 
$num
ââ 
,
ââ 
$num
ââ 
,
ââ 
null
ââ  
,
ââ  !
true
ââ" &
,
ââ& '
$str
ââ( 8
,
ââ8 9
null
ââ: >
,
ââ> ?
$num
ââ@ C
,
ââC D
$str
ââE M
}
ââN O
,
ââO P
{
ää 
$num
ää 
,
ää 
$num
ää 
,
ää 
null
ää  
,
ää  !
true
ää" &
,
ää& '
$str
ää( 8
,
ää8 9
null
ää: >
,
ää> ?
$num
ää@ C
,
ääC D
$str
ääE M
}
ääN O
,
ääO P
{
ãã 
$num
ãã 
,
ãã 
$num
ãã 
,
ãã 
null
ãã  
,
ãã  !
true
ãã" &
,
ãã& '
$str
ãã( 9
,
ãã9 :
null
ãã; ?
,
ãã? @
$num
ããA D
,
ããD E
$str
ããF N
}
ããO P
,
ããP Q
{
åå 
$num
åå 
,
åå 
$num
åå 
,
åå 
null
åå  
,
åå  !
true
åå" &
,
åå& '
$str
åå( =
,
åå= >
null
åå? C
,
ååC D
$num
ååE H
,
ååH I
$str
ååJ R
}
ååS T
,
ååT U
{
çç 
$num
çç 
,
çç 
$num
çç 
,
çç 
null
çç  
,
çç  !
true
çç" &
,
çç& '
$str
çç( ?
,
çç? @
null
ççA E
,
ççE F
$num
ççG J
,
ççJ K
$str
ççL T
}
ççU V
,
ççV W
{
éé 
$num
éé 
,
éé 
$num
éé 
,
éé 
null
éé  
,
éé  !
true
éé" &
,
éé& '
$str
éé( 8
,
éé8 9
null
éé: >
,
éé> ?
$num
éé@ D
,
ééD E
$str
ééF M
}
ééN O
,
ééO P
{
èè 
$num
èè 
,
èè 
$num
èè 
,
èè 
null
èè  
,
èè  !
true
èè" &
,
èè& '
$str
èè( @
,
èè@ A
null
èèB F
,
èèF G
$num
èèH K
,
èèK L
$str
èèM U
}
èèV W
,
èèW X
{
êê 
$num
êê 
,
êê 
$num
êê 
,
êê 
null
êê  
,
êê  !
true
êê" &
,
êê& '
$str
êê( 4
,
êê4 5
null
êê6 :
,
êê: ;
$num
êê< ?
,
êê? @
$str
êêA H
}
êêI J
,
êêJ K
{
ëë 
$num
ëë 
,
ëë 
$num
ëë 
,
ëë 
null
ëë !
,
ëë! "
true
ëë# '
,
ëë' (
$str
ëë) >
,
ëë> ?
null
ëë@ D
,
ëëD E
$num
ëëF I
,
ëëI J
$str
ëëK S
}
ëëT U
,
ëëU V
{
íí 
$num
íí 
,
íí 
$num
íí 
,
íí 
null
íí !
,
íí! "
true
íí# '
,
íí' (
$str
íí) K
,
ííK L
null
ííM Q
,
ííQ R
$num
ííS Y
,
ííY Z
$str
íí[ a
}
ííb c
}
ìì 
)
ìì 
;
ìì 
migrationBuilder
ïï 
.
ïï 
CreateIndex
ïï (
(
ïï( )
name
ññ 
:
ññ 
$str
ññ (
,
ññ( )
table
óó 
:
óó 
$str
óó 
,
óó  
column
òò 
:
òò 
$str
òò  
)
òò  !
;
òò! "
migrationBuilder
öö 
.
öö 
CreateIndex
öö (
(
öö( )
name
õõ 
:
õõ 
$str
õõ .
,
õõ. /
table
úú 
:
úú 
$str
úú !
,
úú! "
column
ùù 
:
ùù 
$str
ùù $
)
ùù$ %
;
ùù% &
migrationBuilder
üü 
.
üü 
CreateIndex
üü (
(
üü( )
name
†† 
:
†† 
$str
†† +
,
††+ ,
table
°° 
:
°° 
$str
°° !
,
°°! "
column
¢¢ 
:
¢¢ 
$str
¢¢ !
)
¢¢! "
;
¢¢" #
}
££ 	
	protected
•• 
override
•• 
void
•• 
Down
••  $
(
••$ %
MigrationBuilder
••% 5
migrationBuilder
••6 F
)
••F G
{
¶¶ 	
migrationBuilder
ßß 
.
ßß 
	DropTable
ßß &
(
ßß& '
name
®® 
:
®® 
$str
®®  
)
®®  !
;
®®! "
migrationBuilder
™™ 
.
™™ 
	DropTable
™™ &
(
™™& '
name
´´ 
:
´´ 
$str
´´ "
)
´´" #
;
´´# $
migrationBuilder
≠≠ 
.
≠≠ 
	DropTable
≠≠ &
(
≠≠& '
name
ÆÆ 
:
ÆÆ 
$str
ÆÆ 
)
ÆÆ 
;
ÆÆ  
migrationBuilder
∞∞ 
.
∞∞ 
	DropTable
∞∞ &
(
∞∞& '
name
±± 
:
±± 
$str
±± 
)
±± 
;
±± 
}
≤≤ 	
}
≥≥ 
}¥¥ Ÿ
eD:\School\semester3\eigenproject\docker-dotnet-sql-test1\GymShopAPI\GymShopAPI.DAL\Models\Category.cs
	namespace 	

GymShopAPI
 
. 
DAL 
. 
Models 
{ 
public 

class 
Category 
{		 
public

 
int

 
Id

 
{

 
get

 
;

 
set

  
;

  !
}

" #
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
virtual 
List 
< 
Product #
># $
Products% -
{. /
get0 3
;3 4
set5 8
;8 9
}: ;
} 
} ∑ê
sD:\School\semester3\eigenproject\docker-dotnet-sql-test1\GymShopAPI\GymShopAPI.DAL\Models\ModelBuilderExtensions.cs
	namespace 	

GymShopAPI
 
. 
DAL 
. 
Models 
{ 
public 

static 
class "
ModelBuilderExtensions .
{ 
public 
static 
void 
Seed 
(  
this  $
ModelBuilder% 1
modelBuilder2 >
)> ?
{ 	
modelBuilder		 
.		 
Entity		 
<		  
Category		  (
>		( )
(		) *
)		* +
.		+ ,
HasData		, 3
(		3 4
new

 
Category

 
{

 
Id

 !
=

" #
$num

$ %
,

% &
Name

' +
=

, -
$str

. A
}

B C
,

C D
new 
Category 
{ 
Id !
=" #
$num$ %
,% &
Name' +
=, -
$str. C
}D E
,E F
new 
Category 
{ 
Id !
=" #
$num$ %
,% &
Name' +
=, -
$str. =
}> ?
,? @
new 
Category 
{ 
Id !
=" #
$num$ %
,% &
Name' +
=, -
$str. <
}= >
,> ?
new 
Category 
{ 
Id !
=" #
$num$ %
,% &
Name' +
=, -
$str. ;
}< =
)= >
;> ?
modelBuilder 
. 
Entity 
<  
Product  '
>' (
(( )
)) *
.* +
HasData+ 2
(2 3
new 
Product 
{ 
Id  
=! "
$num# $
,$ %

CategoryId& 0
=1 2
$num3 4
,4 5
Name6 :
=; <
$str= R
,R S
SkuT W
=X Y
$strZ b
,b c
Priced i
=j k
$numl n
,n o
IsAvailablep {
=| }
true	~ Ç
}
É Ñ
,
Ñ Ö
new 
Product 
{ 
Id  
=! "
$num# $
,$ %

CategoryId& 0
=1 2
$num3 4
,4 5
Name6 :
=; <
$str= I
,I J
SkuK N
=O P
$strQ X
,X Y
PriceZ _
=` a
$numb d
,d e
IsAvailablef q
=r s
truet x
}y z
,z {
new 
Product 
{ 
Id  
=! "
$num# $
,$ %

CategoryId& 0
=1 2
$num3 4
,4 5
Name6 :
=; <
$str= U
,U V
SkuW Z
=[ \
$str] e
,e f
Priceg l
=m n
$numo q
,q r
IsAvailables ~
=	 Ä
true
Å Ö
}
Ü á
,
á à
new 
Product 
{ 
Id  
=! "
$num# $
,$ %

CategoryId& 0
=1 2
$num3 4
,4 5
Name6 :
=; <
$str= M
,M N
SkuO R
=S T
$strU \
,\ ]
Price^ c
=d e
$numf i
,i j
IsAvailablek v
=w x
truey }
}~ 
,	 Ä
new 
Product 
{ 
Id  
=! "
$num# $
,$ %

CategoryId& 0
=1 2
$num3 4
,4 5
Name6 :
=; <
$str= T
,T U
SkuV Y
=Z [
$str\ d
,d e
Pricef k
=l m
$numn p
,p q
IsAvailabler }
=~ 
true
Ä Ñ
}
Ö Ü
,
Ü á
new 
Product 
{ 
Id  
=! "
$num# $
,$ %

CategoryId& 0
=1 2
$num3 4
,4 5
Name6 :
=; <
$str= R
,R S
SkuT W
=X Y
$strZ b
,b c
Priced i
=j k
$numl n
,n o
IsAvailablep {
=| }
true	~ Ç
}
É Ñ
,
Ñ Ö
new 
Product 
{ 
Id  
=! "
$num# $
,$ %

CategoryId& 0
=1 2
$num3 4
,4 5
Name6 :
=; <
$str= N
,N O
SkuP S
=T U
$strV ^
,^ _
Price` e
=f g
$numh j
,j k
IsAvailablel w
=x y
truez ~
}	 Ä
,
Ä Å
new 
Product 
{ 
Id  
=! "
$num# $
,$ %

CategoryId& 0
=1 2
$num3 4
,4 5
Name6 :
=; <
$str= M
,M N
SkuO R
=S T
$strU ]
,] ^
Price_ d
=e f
$numg i
,i j
IsAvailablek v
=w x
truey }
}~ 
,	 Ä
new 
Product 
{ 
Id  
=! "
$num# $
,$ %

CategoryId& 0
=1 2
$num3 4
,4 5
Name6 :
=; <
$str= M
,M N
SkuO R
=S T
$strU ]
,] ^
Price_ d
=e f
$numg i
,i j
IsAvailablek v
=w x
truey }
}~ 
,	 Ä
new 
Product 
{ 
Id  
=! "
$num# %
,% &

CategoryId' 1
=2 3
$num4 5
,5 6
Name7 ;
=< =
$str> W
,W X
SkuY \
=] ^
$str_ h
,h i
Pricej o
=p q
$numr t
,t u
IsAvailable	v Å
=
Ç É
true
Ñ à
}
â ä
,
ä ã
new 
Product 
{ 
Id  
=! "
$num# %
,% &

CategoryId' 1
=2 3
$num4 5
,5 6
Name7 ;
=< =
$str> X
,X Y
SkuZ ]
=^ _
$str` h
,h i
Pricej o
=p q
$numr s
,s t
IsAvailable	u Ä
=
Å Ç
false
É à
}
â ä
,
ä ã
new 
Product 
{ 
Id  
=! "
$num# %
,% &

CategoryId' 1
=2 3
$num4 5
,5 6
Name7 ;
=< =
$str> S
,S T
SkuU X
=Y Z
$str[ c
,c d
Pricee j
=k l
$numm o
,o p
IsAvailableq |
=} ~
true	 É
}
Ñ Ö
,
Ö Ü
new 
Product 
{ 
Id  
=! "
$num# %
,% &

CategoryId' 1
=2 3
$num4 5
,5 6
Name7 ;
=< =
$str> N
,N O
SkuP S
=T U
$strV ]
,] ^
Price_ d
=e f
$numg j
,j k
IsAvailablel w
=x y
truez ~
}	 Ä
,
Ä Å
new 
Product 
{ 
Id  
=! "
$num# %
,% &

CategoryId' 1
=2 3
$num4 5
,5 6
Name7 ;
=< =
$str> T
,T U
SkuV Y
=Z [
$str\ d
,d e
Pricef k
=l m
$numn p
,p q
IsAvailabler }
=~ 
true
Ä Ñ
}
Ö Ü
,
Ü á
new 
Product 
{ 
Id  
=! "
$num# %
,% &

CategoryId' 1
=2 3
$num4 5
,5 6
Name7 ;
=< =
$str> S
,S T
SkuU X
=Y Z
$str[ c
,c d
Pricee j
=k l
$numm o
,o p
IsAvailableq |
=} ~
true	 É
}
Ñ Ö
,
Ö Ü
new   
Product   
{   
Id    
=  ! "
$num  # %
,  % &

CategoryId  ' 1
=  2 3
$num  4 5
,  5 6
Name  7 ;
=  < =
$str  > S
,  S T
Sku  U X
=  Y Z
$str  [ c
,  c d
Price  e j
=  k l
$num  m o
,  o p
IsAvailable  q |
=  } ~
true	   É
}
  Ñ Ö
,
  Ö Ü
new!! 
Product!! 
{!! 
Id!!  
=!!! "
$num!!# %
,!!% &

CategoryId!!' 1
=!!2 3
$num!!4 5
,!!5 6
Name!!7 ;
=!!< =
$str!!> N
,!!N O
Sku!!P S
=!!T U
$str!!V ^
,!!^ _
Price!!` e
=!!f g
$num!!h j
,!!j k
IsAvailable!!l w
=!!x y
true!!z ~
}	!! Ä
,
!!Ä Å
new"" 
Product"" 
{"" 
Id""  
=""! "
$num""# %
,""% &

CategoryId""' 1
=""2 3
$num""4 5
,""5 6
Name""7 ;
=""< =
$str""> W
,""W X
Sku""Y \
=""] ^
$str""_ d
,""d e
Price""f k
=""l m
$num""n r
,""r s
IsAvailable""t 
=
""Ä Å
true
""Ç Ü
}
""á à
,
""à â
new## 
Product## 
{## 
Id##  
=##! "
$num### %
,##% &

CategoryId##' 1
=##2 3
$num##4 5
,##5 6
Name##7 ;
=##< =
$str##> X
,##X Y
Sku##Z ]
=##^ _
$str##` f
,##f g
Price##h m
=##n o
$num##p t
,##t u
IsAvailable	##v Å
=
##Ç É
true
##Ñ à
}
##â ä
,
##ä ã
new$$ 
Product$$ 
{$$ 
Id$$  
=$$! "
$num$$# %
,$$% &

CategoryId$$' 1
=$$2 3
$num$$4 5
,$$5 6
Name$$7 ;
=$$< =
$str$$> T
,$$T U
Sku$$V Y
=$$Z [
$str$$\ a
,$$a b
Price$$c h
=$$i j
$num$$k o
,$$o p
IsAvailable$$q |
=$$} ~
true	$$ É
}
$$Ñ Ö
,
$$Ö Ü
new%% 
Product%% 
{%% 
Id%%  
=%%! "
$num%%# %
,%%% &

CategoryId%%' 1
=%%2 3
$num%%4 5
,%%5 6
Name%%7 ;
=%%< =
$str%%> S
,%%S T
Sku%%U X
=%%Y Z
$str%%[ `
,%%` a
Price%%b g
=%%h i
$num%%j n
,%%n o
IsAvailable%%p {
=%%| }
true	%%~ Ç
}
%%É Ñ
,
%%Ñ Ö
new&& 
Product&& 
{&& 
Id&&  
=&&! "
$num&&# %
,&&% &

CategoryId&&' 1
=&&2 3
$num&&4 5
,&&5 6
Name&&7 ;
=&&< =
$str&&> W
,&&W X
Sku&&Y \
=&&] ^
$str&&_ d
,&&d e
Price&&f k
=&&l m
$num&&n r
,&&r s
IsAvailable&&t 
=
&&Ä Å
true
&&Ç Ü
}
&&á à
,
&&à â
new'' 
Product'' 
{'' 
Id''  
=''! "
$num''# %
,''% &

CategoryId''' 1
=''2 3
$num''4 5
,''5 6
Name''7 ;
=''< =
$str''> X
,''X Y
Sku''Z ]
=''^ _
$str''` e
,''e f
Price''g l
=''m n
$num''o s
,''s t
IsAvailable	''u Ä
=
''Å Ç
true
''É á
}
''à â
,
''â ä
new(( 
Product(( 
{(( 
Id((  
=((! "
$num((# %
,((% &

CategoryId((' 1
=((2 3
$num((4 5
,((5 6
Name((7 ;
=((< =
$str((> \
,((\ ]
Sku((^ a
=((b c
$str((d j
,((j k
Price((l q
=((r s
$num((t z
,((z {
IsAvailable	((| á
=
((à â
true
((ä é
}
((è ê
,
((ê ë
new)) 
Product)) 
{)) 
Id))  
=))! "
$num))# %
,))% &

CategoryId))' 1
=))2 3
$num))4 5
,))5 6
Name))7 ;
=))< =
$str))> \
,))\ ]
Sku))^ a
=))b c
$str))d k
,))k l
Price))m r
=))s t
$num))u z
,))z {
IsAvailable	))| á
=
))à â
true
))ä é
}
))è ê
,
))ê ë
new** 
Product** 
{** 
Id**  
=**! "
$num**# %
,**% &

CategoryId**' 1
=**2 3
$num**4 5
,**5 6
Name**7 ;
=**< =
$str**> a
,**a b
Sku**c f
=**g h
$str**i q
,**q r
Price**s x
=**y z
$num	**{ Å
,
**Å Ç
IsAvailable
**É é
=
**è ê
true
**ë ï
}
**ñ ó
,
**ó ò
new++ 
Product++ 
{++ 
Id++  
=++! "
$num++# %
,++% &

CategoryId++' 1
=++2 3
$num++4 5
,++5 6
Name++7 ;
=++< =
$str++> X
,++X Y
Sku++Z ]
=++^ _
$str++` f
,++f g
Price++h m
=++n o
$num++p v
,++v w
IsAvailable	++x É
=
++Ñ Ö
true
++Ü ä
}
++ã å
,
++å ç
new,, 
Product,, 
{,, 
Id,,  
=,,! "
$num,,# %
,,,% &

CategoryId,,' 1
=,,2 3
$num,,4 5
,,,5 6
Name,,7 ;
=,,< =
$str,,> ^
,,,^ _
Sku,,` c
=,,d e
$str,,f m
,,,m n
Price,,o t
=,,u v
$num,,w }
,,,} ~
IsAvailable	,, ä
=
,,ã å
true
,,ç ë
}
,,í ì
,
,,ì î
new-- 
Product-- 
{-- 
Id--  
=--! "
$num--# %
,--% &

CategoryId--' 1
=--2 3
$num--4 5
,--5 6
Name--7 ;
=--< =
$str--> [
,--[ \
Sku--] `
=--a b
$str--c h
,--h i
Price--j o
=--p q
$num--r w
,--w x
IsAvailable	--y Ñ
=
--Ö Ü
true
--á ã
}
--å ç
,
--ç é
new.. 
Product.. 
{.. 
Id..  
=..! "
$num..# %
,..% &

CategoryId..' 1
=..2 3
$num..4 5
,..5 6
Name..7 ;
=..< =
$str..> a
,..a b
Sku..c f
=..g h
$str..i n
,..n o
Price..p u
=..v w
$num..x ~
,..~ 
IsAvailable
..Ä ã
=
..å ç
true
..é í
}
..ì î
,
..î ï
new// 
Product// 
{// 
Id//  
=//! "
$num//# %
,//% &

CategoryId//' 1
=//2 3
$num//4 5
,//5 6
Name//7 ;
=//< =
$str//> _
,//_ `
Sku//a d
=//e f
$str//g l
,//l m
Price//n s
=//t u
$num//v |
,//| }
IsAvailable	//~ â
=
//ä ã
true
//å ê
}
//ë í
,
//í ì
new00 
Product00 
{00 
Id00  
=00! "
$num00# %
,00% &

CategoryId00' 1
=002 3
$num004 5
,005 6
Name007 ;
=00< =
$str00> _
,00_ `
Sku00a d
=00e f
$str00g l
,00l m
Price00n s
=00t u
$num00v {
,00{ |
IsAvailable	00} à
=
00â ä
true
00ã è
}
00ê ë
,
00ë í
new11 
Product11 
{11 
Id11  
=11! "
$num11# %
,11% &

CategoryId11' 1
=112 3
$num114 5
,115 6
Name117 ;
=11< =
$str11> `
,11` a
Sku11b e
=11f g
$str11h n
,11n o
Price11p u
=11v w
$num11x ~
,11~ 
IsAvailable
11Ä ã
=
11å ç
true
11é í
}
11ì î
)
11î ï
;
11ï ñ
modelBuilder33 
.33 
Entity33 
<33  
User33  $
>33$ %
(33% &
)33& '
.33' (
HasData33( /
(33/ 0
new44 
User44 
{44 
Id44 
=44 
$num44  !
,44! "
Email44# (
=44) *
$str44+ =
}44> ?
,44? @
new55 
User55 
{55 
Id55 
=55 
$num55  !
,55! "
Email55# (
=55) *
$str55+ @
}55A B
)55B C
;55C D
}66 	
}77 
}88 “	
bD:\School\semester3\eigenproject\docker-dotnet-sql-test1\GymShopAPI\GymShopAPI.DAL\Models\Order.cs
	namespace 	

GymShopAPI
 
. 
DAL 
. 
Models 
{ 
public		 

class		 
Order		 
{

 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
DateTime 
	OrderDate !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
int 
UserId 
{ 
get 
;  
set! $
;$ %
}& '
[ 	

JsonIgnore	 
] 
public 
virtual 
User 
User  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
virtual 
List 
< 
Product #
># $
Products% -
{. /
get0 3
;3 4
set5 8
;8 9
}: ;
} 
} Ê
dD:\School\semester3\eigenproject\docker-dotnet-sql-test1\GymShopAPI\GymShopAPI.DAL\Models\Product.cs
	namespace 	

GymShopAPI
 
. 
DAL 
. 
Models 
{ 
public		 

class		 
Product		 
{

 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
Sku 
{ 
get 
;  
set! $
;$ %
}& '
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Description !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
decimal 
Price 
{ 
get "
;" #
set$ '
;' (
}) *
public 
bool 
IsAvailable 
{  !
get" %
;% &
set' *
;* +
}, -
public 
int 

CategoryId 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	

JsonIgnore	 
] 
public 
virtual 
Category 
Category  (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
} 
} õ
hD:\School\semester3\eigenproject\docker-dotnet-sql-test1\GymShopAPI\GymShopAPI.DAL\Models\ShopContext.cs
	namespace 	

GymShopAPI
 
. 
DAL 
. 
Models 
{ 
public		 

class		 
ShopContext		 
:		 
	DbContext		 (
{

 
public 
ShopContext 
( 
DbContextOptions +
<+ ,
ShopContext, 7
>7 8
options9 @
)@ A
:B C
baseD H
(H I
optionsI P
)P Q
{ 	
} 	
	protected 
override 
void 
OnModelCreating  /
(/ 0
ModelBuilder0 <
modelBuilder= I
)I J
{ 	
modelBuilder 
. 
Entity 
<  
Category  (
>( )
() *
)* +
.+ ,
HasMany, 3
(3 4
c4 5
=>6 8
c9 :
.: ;
Products; C
)C D
.D E
WithOneE L
(L M
aM N
=>O Q
aR S
.S T
CategoryT \
)\ ]
.] ^
HasForeignKey^ k
(k l
al m
=>n p
aq r
.r s

CategoryIds }
)} ~
;~ 
modelBuilder 
. 
Entity 
<  
Order  %
>% &
(& '
)' (
.( )
HasMany) 0
(0 1
o1 2
=>3 5
o6 7
.7 8
Products8 @
)@ A
;A B
modelBuilder 
. 
Entity 
<  
Order  %
>% &
(& '
)' (
.( )
HasOne) /
(/ 0
o0 1
=>2 4
o5 6
.6 7
User7 ;
); <
;< =
modelBuilder 
. 
Entity 
<  
User  $
>$ %
(% &
)& '
.' (
HasMany( /
(/ 0
u0 1
=>2 4
u5 6
.6 7
Orders7 =
)= >
.> ?
WithOne? F
(F G
oG H
=>I K
oL M
.M N
UserN R
)R S
.S T
HasForeignKeyT a
(a b
ob c
=>d f
og h
.h i
UserIdi o
)o p
;p q
modelBuilder 
. 
Seed 
( 
) 
;  
} 	
public 
DbSet 
< 
Product 
> 
Products &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
DbSet 
< 
Category 
> 

Categories )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 
DbSet 
< 
Order 
> 
Orders "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
DbSet 
< 
User 
> 
Users  
{! "
get# &
;& '
set( +
;+ ,
}- .
} 
} Œ
aD:\School\semester3\eigenproject\docker-dotnet-sql-test1\GymShopAPI\GymShopAPI.DAL\Models\User.cs
	namespace 	

GymShopAPI
 
. 
DAL 
. 
Models 
{ 
public 

class 
User 
{		 
public

 
int

 
Id

 
{

 
get

 
;

 
set

  
;

  !
}

" #
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
public 
virtual 
List 
< 
Order !
>! "
Orders# )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
} 
} 