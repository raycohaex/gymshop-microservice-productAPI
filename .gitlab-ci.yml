# This file is a template, and might need editing before it works on your project.
# The following script will work for any project that can be built from command line by msbuild
# It uses powershell shell executor, so you need to add the following line to your config.toml file
# (located in gitlab-runner.exe directory):
#   shell = "powershell"
#
# The script is composed of 3 stages: build, test and deploy.
#
# The build stage restores NuGet packages and uses msbuild to build the exe and msi
# One major issue you'll find is that you can't build msi projects from command line
# if you use vdproj.  There are workarounds building msi via devenv, but they rarely work
# The best solution is migrating your vdproj projects to WiX, as it can be build directly
# by msbuild.
#
# The test stage runs nunit from command line against Test project inside your solution
# It also saves the resulting TestResult.xml file
#
# The deploy stage copies the exe and msi from build stage to a network drive
# You need to have the network drive mapped as Local System user for gitlab-runner service to see it
# The best way to persist the mapping is via a scheduled task (see: https://stackoverflow.com/a/7867064/1288473),
# running the following batch command: net use P: \\x.x.x.x\Projects /u:your_user your_pass /persistent:yes


# place project specific paths in variables to make the rest of the script more generic
image: mcr.microsoft.com/dotnet/core/sdk:3.1

variables:
    test: 'gymshopapi.test'
# MSI_RELEASE_FOLDER: 'Setup\bin\Release'
# TEST_FOLDER: 'Tests\bin\Release'
# DEPLOY_FOLDER: 'P:\Projects\YourApp\Builds'
# NUGET_PATH: 'C:\NuGet\nuget.exe'
# MSBUILD_PATH: 'C:\Program Files (x86)\MSBuild\14.0\Bin\msbuild.exe'
# NUNIT_PATH: 'C:\Program Files (x86)\NUnit.org\nunit-console\nunit3-console.exe'

stages:
  - build
  - test
  - deploy

before_script:
    - "cd GymShopAPI.BBL"
    - "dotnet restore"

build:
  stage: build
  tags:
    - docker
  script:
    - 'dotnet build'

test:
  stage: test
  tags:
    - docker
  script:
    - "cd $test"
    - "dotnet test"
  dependencies:
    - build

deploy:
  stage: deploy
  tags:
    - docker
  script:
    echo "Deploy de applicatie naar docker hier"
  dependencies:
    - build
    - test
